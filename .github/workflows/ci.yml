name: build-and-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential sqlite3 libsqlite3-dev

      - name: Install dependencies
        run: go mod tidy
        env:
          GOPROXY: "direct"
          CGO_ENABLED: 1

      - name: Run tests with coverage
        run: go test -v ./... -coverprofile=coverage.out
        env:
          CGO_ENABLED: 1

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential sqlite3 libsqlite3-dev

      - name: Install dependencies
        run: go mod tidy
        env:
          GOPROXY: "direct"
          CGO_ENABLED: 1

      - name: Build for Linux AMD64
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -v -o sloth-runner-linux-amd64 ./cmd/sloth-runner
        env:
          CC: gcc

      - name: Build for Linux ARM64  
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu
          GOOS=linux GOARCH=arm64 CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc go build -v -o sloth-runner-linux-arm64 ./cmd/sloth-runner

      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -v -o sloth-runner-darwin-amd64 ./cmd/sloth-runner
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -v -o sloth-runner-darwin-arm64 ./cmd/sloth-runner

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            sloth-runner-*

  changelog:
    name: Changelog
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential sqlite3 libsqlite3-dev

      - name: Run GoReleaser for changelog
        uses: goreleaser/goreleaser-action@v5
        with:
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GOPROXY: "direct"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CGO_ENABLED: 1
