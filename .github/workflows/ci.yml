name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.0'

      - name: Install dependencies
        run: go mod tidy
        env:
          GOPROXY: "direct"

      - name: Run tests with coverage
        run: go test -v ./... -coverprofile=coverage.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.0'

      - name: Install dependencies
        run: go mod tidy
        env:
          GOPROXY: "direct"

      - name: Build
        run: go build -v ./cmd/sloth-runner

  changelog:
    name: Changelog
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.0'

      - name: Run GoReleaser for changelog
        uses: goreleaser/goreleaser-action@v5
        with:
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GOPROXY: "direct"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
