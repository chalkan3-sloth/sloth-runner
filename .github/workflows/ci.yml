name: build-and-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Debug - Environment Info
        run: |
          echo "=== System Info ==="
          uname -a
          echo "=== User Info ==="
          whoami
          echo "=== Environment ==="
          env | grep -E "(GITHUB|CI|RUNNER)" | sort
          echo "========================"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug - Repository Info
        run: |
          echo "=== Repository Contents ==="
          ls -la
          echo "=== Go Files Count ==="
          find . -name "*.go" | wc -l
          echo "=== Go.mod Info ==="
          cat go.mod
          echo "========================"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Debug - Go Info
        run: |
          echo "=== Go Installation ==="
          go version
          go env
          echo "========================"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install system dependencies
        run: |
          echo "=== Installing system dependencies ==="
          sudo apt-get update
          sudo apt-get install -y build-essential sqlite3 libsqlite3-dev
          echo "=== Dependencies installed ==="

      - name: Install Go dependencies
        run: |
          echo "=== Installing Go dependencies ==="
          go mod download
          go mod verify
          echo "=== Go dependencies installed ==="
        env:
          GOPROXY: "direct"
          CGO_ENABLED: 1

      - name: Run tests with coverage
        run: |
          echo "=== Running tests ==="
          go test -v ./... -coverprofile=coverage.out
          echo "=== Tests completed ==="
        env:
          CGO_ENABLED: 1

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage.out
