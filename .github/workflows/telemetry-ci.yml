name: Telemetry CI

on:
  push:
    branches: [ master ]
    paths:
      - 'internal/telemetry/**'
      - 'cmd/sloth-runner/**'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/telemetry-ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'internal/telemetry/**'
      - 'cmd/sloth-runner/**'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/telemetry-ci.yml'

jobs:
  telemetry-test:
    name: Test Telemetry Module
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential sqlite3 libsqlite3-dev
        timeout-minutes: 2

      - name: Install Go dependencies
        run: |
          go mod download
          go mod verify
        env:
          GOPROXY: "direct"
          CGO_ENABLED: 1
        timeout-minutes: 3

      - name: Test telemetry module
        run: |
          echo "Testing telemetry package..."
          go test -v ./internal/telemetry/... -coverprofile=telemetry-coverage.out -timeout=2m
        env:
          CGO_ENABLED: 1
        timeout-minutes: 3

      - name: Build sloth-runner with telemetry
        run: |
          echo "Building sloth-runner with telemetry support..."
          CGO_ENABLED=1 go build -v -o sloth-runner-telemetry ./cmd/sloth-runner
        timeout-minutes: 3

      - name: Test telemetry commands
        run: |
          echo "Testing telemetry CLI commands..."
          ./sloth-runner-telemetry version
          ./sloth-runner-telemetry agent metrics --help
          ./sloth-runner-telemetry agent metrics prom --help || true
          ./sloth-runner-telemetry agent metrics grafana --help || true
        timeout-minutes: 2

      - name: Start test agent with telemetry
        run: |
          echo "Starting test agent with telemetry..."
          ./sloth-runner-telemetry agent start test-agent --port 50099 --metrics-port 9099 &
          AGENT_PID=$!
          echo "AGENT_PID=$AGENT_PID" >> $GITHUB_ENV
          sleep 5

          # Test metrics endpoint
          curl -f http://localhost:9099/health || exit 1
          curl -f http://localhost:9099/metrics | grep -q "sloth_tasks_total" || exit 1

          # Stop the agent
          kill $AGENT_PID || true
        timeout-minutes: 2

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: telemetry-coverage-report
          path: telemetry-coverage.out

      - name: Upload test binary
        uses: actions/upload-artifact@v4
        with:
          name: sloth-runner-telemetry-binary
          path: sloth-runner-telemetry
          retention-days: 1