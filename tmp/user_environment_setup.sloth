-- Workflow for managing user environment
local install_packages_task = task("install-packages")
    :description("Install default packages")
    :delegate_to("maria-guica")
    :delegate_to("maria-guica")
    :command(function(this, params)
        local success, msg = pkg.install({
            packages = { "kitty-terminfo", "stow", "git", "zsh", "lsd", "fzf" },
        })

        if not success then
            return false, "Failed to install packages: " .. tostring(msg)
        end

        return true, "Packages installed successfully"
    end)
    :build()

local manager_user_task = task("manager-user")
    :description("Create and configure user")
    :delegate_to("maria-guica")
    :delegate_to("maria-guica")
    :command(function(this, params)
        local success, msg = user.create({
            username = "igor",

            home = "/home/igor",
            shell = "/bin/zsh",
            groups = { "wheel" },
            create_home = true,
        })

        if not success then
            return false, "Failed to create user: " .. tostring(msg)
        end

        return true, "User created successfully: " .. msg
    end)
    :build()

local clone_dotfiles_task = task("clone-dotfiles")
    :description("Clone dotfiles repository")
    :delegate_to("maria-guica")
    :user("igor")
    :workdir("/home/igor")
    :command(function(this, params)
        local success, msg = exec.run("sudo -u igor -- /bin/sh -c 'rm -rf /home/igor/dotfiles && git clone https://github.com/chalkan3/dotfiles.git /home/igor/dotfiles'")
        if not success then
            return false, "Failed to clone dotfiles: " .. msg
        end
        return true, "Dotfiles cloned successfully"
    end)
    :build()

local stow_dotfiles_task = task("stow-dotfiles")
    :description("Stow dotfiles configurations")
    :delegate_to("maria-guica")
    :user("igor")
    :workdir("/home/igor")
    :command(function(this, params)
        local work_dir = "/home/igor" -- Hardcode work_dir for stow

        -- Create .zsh directory if it doesn't exist
        local ok_mkdir, msg_mkdir = exec.run(string.format("sudo -u igor -- /bin/sh -c 'mkdir -p /home/igor/.zsh'"))
        if not ok_mkdir then
            return false, "Falha ao criar o diret√≥rio .zsh: " .. msg_mkdir
        end

        -- Stow zsh dotfiles into /home/igor/.zsh
        local stow_zsh_command = string.format("stow -d %s -t %s %s", work_dir .. "/dotfiles/zsh", "/home/igor/.zsh", ".")
        local ok_zsh, msg_zsh, output_zsh = exec.run(string.format("sudo -u igor -- /bin/sh -c '%s'", stow_zsh_command))
        if type(output_zsh) == "string" then
            log.info("Stow zsh output: " .. output_zsh)
        else
            log.info("Stow zsh output: (no string output)")
        end
        if not ok_zsh then
            return false, "Falha ao stocar o pacote 'zsh': " .. msg_zsh
        end

        -- Stow zshrc dotfile into /home/igor
        local stow_zshrc_command = string.format("stow -d %s -t %s %s", work_dir .. "/dotfiles", "/home/igor", "zshrc")
        local ok_zshrc, msg_zshrc, output_zshrc = exec.run(string.format("sudo -u igor -- /bin/sh -c '%s'", stow_zshrc_command))
        if type(output_zshrc) == "string" then
            log.info("Stow zshrc output: " .. output_zshrc)
        else
            log.info("Stow zshrc output: (no string output)")
        end
        if not ok_zshrc then
            return false, "Falha ao stocar o pacote 'zshrc': " .. msg_zshrc
        end

        return true, "Todos os pacotes dotfiles stocados com sucesso!"
    end)
    :build()

workflow
    .define("user_environment_setup")
    :description("Complete user environment setup pipeline")
    :version("1.0.0")
    :tasks({ install_packages_task, manager_user_task, clone_dotfiles_task, stow_dotfiles_task })
    :config({
        timeout = "30m",
        max_parallel_tasks = 1,
    })
    :on_complete(function(success, results)
        if success then
            log.info("üéâ User environment setup completed successfully!")
        else
            log.error("‚ùå User environment setup failed")
        end
    end)
