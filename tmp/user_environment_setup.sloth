-- Workflow for managing user environment
local install_packages_task = task("install-packages")
    :description("Install default packages")
    :delegate_to("maria-guica")
    :command(function(this, params)
        local success, msg = pkg.install({
            packages = { "kitty-terminfo", "stow", "git", "zsh", "lsd", "fzf" },
        })

        if not success then
            return false, "Failed to install packages: " .. tostring(msg)
        end

        return true, "Packages installed successfully"
    end)
    :build()

local manager_user_task = task("manager-user")
    :description("Create and configure user")
    :delegate_to("maria-guica")
    :command(function(this, params)
        local success, msg = user.create({
            username = "chalkan3",
            password = "Igorgr123@1929",
            home = "/home/chalkan3",
            shell = "/bin/bash",
            groups = { "wheel" },
            create_home = true,
        })

        if not success then
            return false, "Failed to create user: " .. tostring(msg)
        end


        return true, "User created successfully: " .. msg
    end)
    :build()

local clone_dotfiles_task = task("clone-dotfiles")
    :description("Clone dotfiles repository")
    :delegate_to("maria-guica")
    :user("chalkan3")
    :workdir("/home/chalkan3")
    :command(function(this, params)
        local repo =
            git.clone("https://github.com/chalkan3/dotfiles.git", "/home/chalkan3/dotfiles")

        return true, "Dotfiles cloned successfully"
    end)
    :build()

local stow_dotfiles_task = task("stow-dotfiles")
    :description("Stow dotfiles configurations")
    :delegate_to("maria-guica")
    :user("chalkan3")
    :workdir("/home/chalkan3")
    :command(function(this, params)
        local packages_to_stow = {
            {
                name = "zsh",
                target = "/home/chalkan3/.zsh", -- O link ser√° criado em /home/chalkan3/.zsh
                dir = this.workdir.get() .. "/dotfiles",
            },

            {
                name = "zshrc",
                target = this.workdir.get(),
                dir = this.workdir.get() .. "/dotfiles", -- A fonte 'zshrc' est√° em 'this.workdir.get()/dotfiles/zshrc'
            },
        }

        local work_dir = this.workdir.get()

        for _, package in ipairs(packages_to_stow) do
            local stow_dir = package.dir or work_dir

            local stow_target = package.target or base_target

            local ok, msg = stow.stow({
                packages = { package.name },
                dir = stow_dir,
                target = stow_target,
            })

            if not ok then
                return false, "Falha ao stocar o pacote '" .. package.name .. "': " .. msg
            end
        end

        return true, "Todos os pacotes dotfiles stocados com sucesso!"
    end)
    :build()

workflow
    .define("user_environment_setup")
    :description("Complete user environment setup pipeline")
    :version("1.0.0")
    :tasks({ install_packages_task, manager_user_task, clone_dotfiles_task, stow_dotfiles_task })
    :config({
        timeout = "30m",
        max_parallel_tasks = 1,
    })
    :on_complete(function(success, results)
        if success then
            log.info("üéâ User environment setup completed successfully!")
        else
            log.error("‚ùå User environment setup failed")
        end
    end)