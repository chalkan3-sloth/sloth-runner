#!/bin/bash

echo "üîß DEMONSTRA√á√ÉO: exec.run vs io.popen"
echo "===================================="
echo ""

echo "üìã 1. Listando exemplos dispon√≠veis:"
echo "---"
ls -la examples/agents/*.sloth | grep -E "(exec|popen|delegate)" | awk '{print "‚Ä¢ " $9 " (" $5 " bytes)"}'
echo ""

echo "üöÄ 2. Testando exec.run method:"
echo "---"
sloth-runner run -f examples/agents/exec_vs_popen.sloth simple_exec_test 2>&1 | grep -E "(exec.run|Host:|Directory listing|SUCCESS|FAILED)" | head -10
echo ""

echo "üìä 3. Compara√ß√£o dos m√©todos:"
echo "---"
echo "‚úÖ exec.run (RECOMENDADO):"
echo "   ‚Ä¢ Integra√ß√£o nativa com sloth-runner"
echo "   ‚Ä¢ Controle de ambiente e working directory"
echo "   ‚Ä¢ Tratamento estruturado de erros"
echo "   ‚Ä¢ Separa√ß√£o clara de stdout/stderr"
echo "   ‚Ä¢ Logs autom√°ticos no sistema"
echo ""
echo "‚ö†Ô∏è  io.popen (M√âTODO ANTIGO):"
echo "   ‚Ä¢ Funcional mas limitado"
echo "   ‚Ä¢ Menos controle sobre execu√ß√£o"
echo "   ‚Ä¢ Tratamento manual de erros"
echo "   ‚Ä¢ Sem logs estruturados"
echo ""

echo "üí° 4. Sintaxe Recomendada:"
echo "---"
cat << 'EOF'
-- ‚úÖ RECOMENDADO: Usar exec.run
local stdout, stderr, failed = exec.run("ls -la $HOME")
if not failed then
    log.info("Sucesso: " .. stdout)
else
    log.error("Erro: " .. stderr)
end

-- ‚ùå EVITAR: io.popen (m√©todo antigo)
local handle = io.popen("ls -la $HOME")
local output = handle:read("*a")
local success = handle:close()
EOF

echo ""
echo "üéØ 5. Arquivos de Exemplo Atualizados:"
echo "---"
echo "‚Ä¢ exec_vs_popen.sloth          ‚Üí Compara√ß√£o dos m√©todos"
echo "‚Ä¢ ls_delegate_exec.sloth       ‚Üí Usando exec.run com delegate_to"
echo "‚Ä¢ ls_delegate_simple.sloth     ‚Üí Vers√£o com io.popen (para compara√ß√£o)"
echo ""

echo "‚úÖ RECOMENDA√á√ÉO FINAL:"
echo "Use sempre exec.run em vez de io.popen para melhor integra√ß√£o!"