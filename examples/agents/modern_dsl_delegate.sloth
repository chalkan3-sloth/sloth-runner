-- EXEMPLO FUNCIONANDO: Pipeline remota usando Modern DSL
-- Este exemplo executa comandos remotos usando delegate_to

-- Task para execu√ß√£o no ladyguica
local task_ladyguica = task("hostname_on_ladyguica")
    :description("Executa hostname no ladyguica")
    :command(function(this, params)
        log.info("üöÄ Executando hostname no ladyguica...")
        
        local output, error, failed = exec.run("hostname && date && echo 'Executado no ladyguica!'")
        
        if not failed then
            log.info("‚úÖ Sucesso no ladyguica!")
            log.info("üìù Sa√≠da: " .. output)
            return true, "Hostname executado com sucesso"
        else
            log.error("‚ùå Falha: " .. (error or "erro desconhecido"))
            return false, "Hostname falhou"
        end
    end)
    :delegate_to("ladyguica")
    :timeout("30s")
    :build()

-- Task para execu√ß√£o no keiteguica
local task_keiteguica = task("ls_on_keiteguica")
    :description("Lista arquivos no keiteguica")
    :command(function(this, params)
        log.info("üîç Listando arquivos no keiteguica...")
        
        local output, error, failed = exec.run("ls -la $HOME && echo 'Listagem realizada no keiteguica!'")
        
        if not failed then
            log.info("‚úÖ Listagem realizada com sucesso!")
            log.info("üìÇ Arquivos:\n" .. output)
            return true, "Listagem conclu√≠da"
        else
            log.error("‚ùå Falha na listagem: " .. (error or "erro desconhecido"))
            return false, "Listagem falhou"
        end
    end)
    :delegate_to("keiteguica") 
    :timeout("30s")
    :build()

-- Workflow que coordena a execu√ß√£o
workflow.define("pipeline_remota_completa")
    :description("Pipeline que executa comandos em m√∫ltiplos agentes")
    :version("1.0.0")
    :tasks({ task_ladyguica, task_keiteguica })
    :config({
        timeout = "2m"
    })
    :on_complete(function(success, results)
        if success then
            log.info("üéâ PIPELINE REMOTA CONCLU√çDA COM SUCESSO!")
            log.info("‚úÖ Comandos executados nos agentes remotos")
        else
            log.error("‚ùå Pipeline falhou")
        end
        return true
    end)