-- EXEMPLO FUTURO: Como deveria funcionar o delegate_to
-- Este arquivo mostra como usar delegate_to quando estiver funcionando

TaskDefinitions = {
    pipeline_distribuida = {
        description = "Pipeline distribu√≠da em m√∫ltiplos agentes",
        tasks = {
            {
                name = "coleta_info_ladyguica",
                description = "Coleta informa√ß√µes do sistema no ladyguica",
                command = function()
                    log.info("üîç Coletando informa√ß√µes do sistema...")
                    
                    local hostname, _, failed1 = exec.run("hostname")
                    local uptime, _, failed2 = exec.run("uptime")
                    local diskspace, _, failed3 = exec.run("df -h /")
                    
                    if not failed1 and not failed2 and not failed3 then
                        log.info("‚úÖ Informa√ß√µes coletadas:")
                        log.info("üñ•Ô∏è  Hostname: " .. hostname:gsub("\n", ""))
                        log.info("‚è±Ô∏è  Uptime: " .. uptime:gsub("\n", ""))
                        log.info("üíæ Disco: " .. diskspace:match("[^\n]*\n([^\n]*)"))
                        
                        return true, "Informa√ß√µes coletadas do ladyguica"
                    else
                        return false, "Falha na coleta de informa√ß√µes"
                    end
                end,
                delegate_to = "ladyguica",
                timeout = "60s"
            },
            {
                name = "coleta_info_keiteguica", 
                description = "Coleta informa√ß√µes do sistema no keiteguica",
                command = function()
                    log.info("üîç Coletando informa√ß√µes do sistema...")
                    
                    local hostname, _, failed1 = exec.run("hostname")
                    local uptime, _, failed2 = exec.run("uptime") 
                    local diskspace, _, failed3 = exec.run("df -h /")
                    
                    if not failed1 and not failed2 and not failed3 then
                        log.info("‚úÖ Informa√ß√µes coletadas:")
                        log.info("üñ•Ô∏è  Hostname: " .. hostname:gsub("\n", ""))
                        log.info("‚è±Ô∏è  Uptime: " .. uptime:gsub("\n", ""))
                        log.info("üíæ Disco: " .. diskspace:match("[^\n]*\n([^\n]*)"))
                        
                        return true, "Informa√ß√µes coletadas do keiteguica"
                    else
                        return false, "Falha na coleta de informa√ß√µes"
                    end
                end,
                delegate_to = "keiteguica",
                timeout = "60s"
            },
            {
                name = "consolidacao",
                description = "Consolida resultados localmente",
                depends_on = {"coleta_info_ladyguica", "coleta_info_keiteguica"},
                command = function()
                    log.info("üìä Consolidando resultados da pipeline distribu√≠da...")
                    log.info("‚úÖ Pipeline distribu√≠da conclu√≠da com sucesso!")
                    log.info("üìà Dados coletados de m√∫ltiplos agentes")
                    
                    return true, "Consolida√ß√£o conclu√≠da"
                end,
                timeout = "30s"
            }
        }
    }
}

-- COMO EXECUTAR (quando delegate_to estiver funcionando):
-- sloth-runner run -f examples/agents/pipeline_futura.sloth pipeline_distribuida

-- ALTERNATIVA ATUAL (funcionando):
-- ./examples/agents/demo_execucao_remota.sh