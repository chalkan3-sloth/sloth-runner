-- Exemplo final de pipeline distribu√≠da funcionando
-- Execute com: sloth-runner run -f examples/agents/pipeline_distribuida_final.sloth verificacao_distribuida

local check_ladyguica = task("check_ladyguica_status")
    :description("Verificar status do ladyguica")
    :command(function(this, params)
        local hostname_out, _, hostname_failed = exec.run("hostname")
        local uptime_out, _, uptime_failed = exec.run("uptime")
        
        if not hostname_failed and not uptime_failed then
            local hostname = hostname_out:gsub("\n", "")
            log.info("üü¢ Agente " .. hostname .. " operacional")
            log.info("üìä Uptime: " .. uptime_out:gsub("\n", ""))
            return true, "Agente " .. hostname .. " OK"
        else
            log.error("‚ùå Falha na verifica√ß√£o do agente")
            return false, "Falha na verifica√ß√£o"
        end
    end)
    :delegate_to("ladyguica")
    :timeout("30s")
    :build()

local check_keiteguica = task("check_keiteguica_status")
    :description("Verificar status do keiteguica")
    :command(function(this, params)
        local hostname_out, _, hostname_failed = exec.run("hostname")
        local uptime_out, _, uptime_failed = exec.run("uptime")
        
        if not hostname_failed and not uptime_failed then
            local hostname = hostname_out:gsub("\n", "")
            log.info("üü¢ Agente " .. hostname .. " operacional")
            log.info("üìä Uptime: " .. uptime_out:gsub("\n", ""))
            return true, "Agente " .. hostname .. " OK"
        else
            log.error("‚ùå Falha na verifica√ß√£o do agente")
            return false, "Falha na verifica√ß√£o"
        end
    end)
    :delegate_to("keiteguica")
    :timeout("30s")
    :build()

local consolidate = task("consolidate_results")
    :description("Consolidar resultados da verifica√ß√£o")
    :command(function(this, params)
        log.info("üìã Consolidando resultados da verifica√ß√£o distribu√≠da")
        log.info("‚úÖ Verifica√ß√£o de infraestrutura distribu√≠da completa")
        return true, "Consolida√ß√£o conclu√≠da"
    end)
    :timeout("15s")
    :build()

workflow.define("verificacao_distribuida")
    :description("Verifica√ß√£o distribu√≠da de infraestrutura")
    :version("1.0.0")
    :tasks({ check_ladyguica, check_keiteguica, consolidate })
    :config({
        timeout = "2m",
        parallel = false
    })
    :on_complete(function(success, results)
        if success then
            log.info("üéâ VERIFICA√á√ÉO DISTRIBU√çDA: SUCESSO!")
            log.info("‚úÖ Todos os agentes est√£o operacionais")
        else
            log.error("‚ùå FALHA na verifica√ß√£o distribu√≠da")
        end
        return true
    end)