-- Test 02: CPU Watcher - Above Threshold
-- Este teste valida que CPU watchers detectam quando uso ultrapassa threshold

workflow("cpu_watcher_test")
    :description("Test CPU watcher with above threshold detection")
    :tasks({
        task("setup_cpu_monitor")
            :delegate_to("lady-guica")
            :shell([[
                echo "üß™ Test 02: CPU Watcher - Threshold Detection"
                echo "=============================================="
                echo "‚úì Setup complete"
            ]])
            :on_complete(function()
                print("üìù Registering CPU watcher...")

                -- Registrar watcher com threshold baixo para garantir trigger
                local watcher_id = watcher.register.cpu({
                    threshold = 30,  -- 30% - baixo para garantir detec√ß√£o
                    when = {'above'},
                    interval = '5s'
                })

                print("‚úì CPU watcher registered: " .. watcher_id)
                print("‚è≥ Monitoring CPU > 30% every 5 seconds")
            end),

        task("generate_cpu_load")
            :delegate_to("lady-guica")
            :depends_on("setup_cpu_monitor")
            :shell([[
                echo ""
                echo "üîÑ Generating CPU load..."
                echo "-------------------------"

                # Esperar watcher ser registrado
                sleep 3

                echo "1Ô∏è‚É£  Starting CPU stress test (20 seconds)..."

                # Gerar carga de CPU por 20 segundos
                # Usar dd para gerar carga
                timeout 20 sh -c 'while true; do dd if=/dev/zero of=/dev/null bs=1M count=100 2>/dev/null; done' &

                # Esperar eventos serem gerados
                sleep 25

                # Matar processo de stress se ainda existir
                pkill -f "dd if=/dev/zero" 2>/dev/null || true

                echo ""
                echo "‚úÖ CPU load test complete"
                echo "‚è≥ Check agent logs for CPU threshold events"
            ]])
    })
