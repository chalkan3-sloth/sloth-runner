-- File Watcher Test - Working Version
-- Based on agent_test.sloth pattern

local register_watcher = task("register_watcher")
    :description("Register file watcher on agent")
    :command(function()
        print("üß™ File Watcher Test")
        print("====================")

        -- Clean up
        exec.run("rm -f /tmp/watcher_test.txt")
        print("‚úì Cleanup complete")

        -- Register file watcher
        print("\nüìù Registering file watcher...")
        local watcher_id = watcher.register.file({
            file_path = '/tmp/watcher_test.txt',
            when = {'created', 'changed', 'deleted'},
            check_hash = true,
            interval = '2s'
        })

        print("‚úì Watcher registered: " .. watcher_id)
        print("‚è≥ Watcher is monitoring /tmp/watcher_test.txt")

        return true, "Watcher registered successfully"
    end)
    :build()

local create_file = task("create_file")
    :description("Create test file to trigger 'created' event")
    :command(function()
        print("\nüìÑ Creating test file...")
        exec.run("echo 'Initial content' > /tmp/watcher_test.txt")
        print("‚úì File created")

        print("‚è≥ Waiting 5s for watcher to detect...")
        os.execute("sleep 5")

        return true, "File created"
    end)
    :depends_on({"register_watcher"})
    :build()

local modify_file = task("modify_file")
    :description("Modify test file to trigger 'changed' event")
    :command(function()
        print("\n‚úèÔ∏è  Modifying test file...")
        exec.run("echo 'Modified content at " .. os.date() .. "' >> /tmp/watcher_test.txt")
        print("‚úì File modified")

        print("‚è≥ Waiting 5s for watcher to detect...")
        os.execute("sleep 5")

        return true, "File modified"
    end)
    :depends_on({"create_file"})
    :build()

local delete_file = task("delete_file")
    :description("Delete test file to trigger 'deleted' event")
    :command(function()
        print("\nüóëÔ∏è  Deleting test file...")
        exec.run("rm -f /tmp/watcher_test.txt")
        print("‚úì File deleted")

        print("‚è≥ Waiting 5s for watcher to detect...")
        os.execute("sleep 5")

        return true, "File deleted"
    end)
    :depends_on({"modify_file"})
    :build()

workflow
    .define("file_watcher_test")
    :description("Test file watcher with create, change, delete events")
    :version("1.0.0")
    :tasks({
        register_watcher,
        create_file,
        modify_file,
        delete_file
    })
    :config({
        timeout = "5m"
    })
    :on_complete(function(success, results)
        if success then
            print("\n‚úÖ File Watcher Test completed successfully!")
            print("Expected events:")
            print("  - file.created at /tmp/watcher_test.txt")
            print("  - file.changed at /tmp/watcher_test.txt")
            print("  - file.deleted at /tmp/watcher_test.txt")
            print("\nVerify events in agent logs or events database")
        else
            print("\n‚ùå File Watcher Test failed")
        end
    end)
