-- Exemplo de uso do m√≥dulo pkg - Gerenciamento de pacotes
-- Demonstra todas as funcionalidades do m√≥dulo pkg melhorado

TaskDefinitions = {
    package_management_demo = {
        description = "Demonstra√ß√£o do m√≥dulo pkg melhorado",
        tasks = {
            {
                name = "update_package_list",
                description = "Atualiza a lista de pacotes",
                command = function()
                    log.info("üì¶ Atualizando lista de pacotes...")
                    
                    local success, output = pkg.update()
                    
                    if success then
                        log.info("‚úÖ Lista de pacotes atualizada!")
                        log.debug("Sa√≠da: " .. output)
                        return true, "Lista atualizada"
                    else
                        log.error("‚ùå Falha ao atualizar lista: " .. output)
                        return false, "Falha na atualiza√ß√£o"
                    end
                end,
                timeout = "120s"
            },
            {
                name = "install_single_package",
                description = "Instala um √∫nico pacote",
                command = function()
                    log.info("üì¶ Instalando htop...")
                    
                    local success, output = pkg.install("htop")
                    
                    if success then
                        log.info("‚úÖ htop instalado com sucesso!")
                        return true, "Pacote instalado"
                    else
                        log.warn("‚ö†Ô∏è  htop pode j√° estar instalado ou falhou: " .. output)
                        return true, "OK (pode j√° existir)"
                    end
                end,
                timeout = "180s",
                depends_on = {"update_package_list"}
            },
            {
                name = "install_multiple_packages",
                description = "Instala m√∫ltiplos pacotes",
                command = function()
                    log.info("üì¶ Instalando m√∫ltiplos pacotes...")
                    
                    local packages = {"curl", "wget", "vim"}
                    local success, output = pkg.install(packages)
                    
                    if success then
                        log.info("‚úÖ Pacotes instalados com sucesso!")
                        return true, "Pacotes instalados"
                    else
                        log.warn("‚ö†Ô∏è  Alguns pacotes podem j√° estar instalados: " .. output)
                        return true, "OK"
                    end
                end,
                timeout = "180s",
                depends_on = {"install_single_package"}
            },
            {
                name = "search_package",
                description = "Busca por pacotes",
                command = function()
                    log.info("üîç Buscando pacotes relacionados a 'python'...")
                    
                    local success, output = pkg.search("python")
                    
                    if success then
                        log.info("‚úÖ Busca realizada!")
                        local lines = {}
                        for line in output:gmatch("[^\r\n]+") do
                            table.insert(lines, line)
                        end
                        log.info("üìã Encontrados " .. #lines .. " resultados")
                        -- Mostra apenas os primeiros 5 resultados
                        for i = 1, math.min(5, #lines) do
                            log.info("  ‚Ä¢ " .. lines[i])
                        end
                        return true, "Busca conclu√≠da"
                    else
                        log.error("‚ùå Falha na busca: " .. output)
                        return false, "Falha na busca"
                    end
                end,
                timeout = "60s"
            },
            {
                name = "get_package_info",
                description = "Obt√©m informa√ß√µes de um pacote",
                command = function()
                    log.info("‚ÑπÔ∏è  Obtendo informa√ß√µes do pacote curl...")
                    
                    local success, output = pkg.info("curl")
                    
                    if success then
                        log.info("‚úÖ Informa√ß√µes obtidas!")
                        -- Mostra as primeiras linhas da info
                        local count = 0
                        for line in output:gmatch("[^\r\n]+") do
                            if count < 10 then
                                log.info("  " .. line)
                                count = count + 1
                            end
                        end
                        return true, "Info obtida"
                    else
                        log.error("‚ùå Falha ao obter info: " .. output)
                        return false, "Falha"
                    end
                end,
                timeout = "30s"
            },
            {
                name = "list_installed_packages",
                description = "Lista pacotes instalados",
                command = function()
                    log.info("üìã Listando pacotes instalados...")
                    
                    local success, packages = pkg.list()
                    
                    if success then
                        local count = 0
                        if type(packages) == "table" then
                            -- Conta os pacotes
                            for _ in pairs(packages) do
                                count = count + 1
                            end
                        end
                        log.info("‚úÖ Total de pacotes instalados: " .. count)
                        return true, count .. " pacotes"
                    else
                        log.error("‚ùå Falha ao listar pacotes")
                        return false, "Falha"
                    end
                end,
                timeout = "60s"
            }
        }
    }
}
