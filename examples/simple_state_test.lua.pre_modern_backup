-- Modern DSL: Simple state test
-- Migrated from legacy TaskDefinitions format

-- Define state test task using modern fluent API
local state_test_task = task("test_basic_state")
    :description("Test basic state operations with modern DSL")
    :command(function()
        log.info("Modern DSL: Testing state module...")
        
        -- Enhanced state testing with error handling
        local success, err = pcall(function()
            -- Test basic set/get
            state.set("test_key", "test_value")
            local value = state.get("test_key")
            
            if value == "test_value" then
                log.info("✓ Basic set/get works: " .. value)
            else
                error("Basic set/get failed")
            end
            
            -- Test numeric increment
            local counter = state.increment("test_counter", 5)
            log.info("✓ Counter incremented to: " .. counter)
            
            -- Test advanced features
            state.set_with_ttl("temp_key", "temp_value", 60) -- 60 seconds TTL
            log.info("✓ TTL key set successfully")
            
            -- Test stats
            local stats = state.stats()
            log.info("✓ State stats: total_keys=" .. stats.total_keys)
            
            return true
        end)
        
        if not success then
            log.error("✗ State test failed: " .. err)
            return false, "State module test failed: " .. err
        end
        
        return true, "State module working correctly!", {
            test_passed = true,
            features_tested = {"set", "get", "increment", "ttl", "stats"}
        }
    end)
    :timeout("30s")
    :on_success(function(params, output)
        log.info("All state tests passed successfully!")
    end)
    :build()

-- Define workflow using modern syntax
workflow.define("simple_state_test_modern", {
    description = "Simple test of state functionality - Modern DSL",
    version = "2.0.0",
    
    metadata = {
        category = "testing",
        tags = {"state", "testing", "modern-dsl"}
    },
    
    tasks = {
        state_test_task
    },
    
    config = {
        timeout = "5m",
        retry_policy = "linear"
    }
})

-- Maintain backward compatibility
TaskDefinitions = {
    simple_state_test = {
        description = "Simple test of state functionality",
        tasks = {
            test_basic_state = {
                name = "test_basic_state",
                description = "Test basic state operations",
                command = function()
                    log.info("Testing state module...")
                    
                    -- Test basic set/get
                    state.set("test_key", "test_value")
                    local value = state.get("test_key")
                    
                    if value == "test_value" then
                        log.info("✓ Basic set/get works: " .. value)
                    else
                        log.error("✗ Basic set/get failed")
                        return false, "Basic state test failed"
                    end
                    
                    -- Test numeric increment
                    local counter = state.increment("test_counter", 5)
                    log.info("✓ Counter incremented to: " .. counter)
                    
                    -- Test stats
                    local stats = state.stats()
                    log.info("✓ State stats: total_keys=" .. stats.total_keys)
                    
                    return true, "State module working correctly!"
                end,
            }
        }
    }
}